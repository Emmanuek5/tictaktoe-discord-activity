version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NEXT_PUBLIC_SOCKET_URL=http://localhost:4000
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/discord-activity
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=discord-activity
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - redis
      - postgres
      - socket-server

  socket-server:
    build:
      context: .
      dockerfile: Dockerfile.socket
    ports:
      - "4000:4000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/discord-activity
      - SOCKET_PORT=4000
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - redis
      - postgres

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=discord-activity
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
